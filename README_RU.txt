1.ОПИСАНИЕ ПРИЛОЖЕНИЯ.
Это приложение возвращает строковое представление ассоциативного массива, содержащего частоту использования
каждого символа в введенном тексте. Все значения отсортированы по убыванию частоты использования символов
в введенном тексте. Все пробельные символы группируются в одно значение "whitespaces".

2. КАК ПОЛЬЗОВАТЬСЯ.
2.1. С ПОМОЩЬЮ ЛЮБОГО БРАУЗЕРА
Это приложение имеет собственный пользовательский интерфейс. После запуска метода "main" в классе
SymbolCounterApplication доступ к функциональности этого приложения можно получить через любой браузер
по URL-адресу http://localhost:8080. Основной функционал расположен в разделе «Let's get started»
в конце главной страницы.
2.2. ИСПОЛЬЗОВАНИЕ REST API
После запуска метода "main" в классе SymbolCounterApplication доступ к функциональности этого приложения можно
получить следующим образом:
     - клиенты: Postman и др,
     - метод: "POST",
     - URL: http://localhost:8080/character/countFrequency
     - body: raw
     - content-type: application/json
     - JSON : { "value": "Здесь указывается любой текст"}

3. ПАРАМЕТРЫ
В браузере (в текством поле раздела «Let's get started») или в поле "value" JSON объекта можно вводить любые
слова, фразы и предложения, используя:
- любые символы латиницы или кириллицы ("a"-"z", "A"-"Z", "а"-"я", "А"-"Я"),
- любые числа ("0"-"9"),
- или любые знаки препинания ("_!"#$%&'()*+,-./:;<=>?@[]^_`{|}~").

4.ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ
4.1. При использовании браузера.
Результатом будет строковое представление ассоциативного массива, содержащего частоту использования каждого
символа в введенном тексте. Все значения будут отсортированы по убыванию частоты использования символов
в введенном тексте. Все пробельные символы будут сгруппированы в одно значение "whitespaces".
           Примеры использования:
        (a) Ввод:      "abbccc"
            Результат: "c": 3, "b": 2, "a": 1
        (b) Ввод:      "a b b c c c"
            Результат: "whitespace": 5, "c": 3, "b": 2, "a": 1
        (c) Ввод:      "a+b-b=c*c/c"
            Результат: "c": 3, "b": 2, "a": 1, "*": 1, "+": 1, "-": 1, "=": 1, "/": 1
4.2. При испольовании REST API
Возвращается JSON объект с единственным полем "characterFrequency". В этом поле будет храниться строковое
представление ассоциативного массива, содержащего частоту использования каждого символа в введенном тексте.
Все значения будут отсортированы по убыванию частоты использования символов в введенном тексте. Все
пробельные символы будут сгруппированы в одно значение "whitespaces".

ПРИМЕЧАНИЕ: Чтобы обеспечить правильный вывод строки, все символы кавычек экранируются.

            Примеры использования:
        (a) Ввод:      {
                          "value": "abbccc"
                       }
            Результат: {
                          "characterFrequency": "\"c\": 3, \"b\": 2, \"a\": 1"
                       }
        (b) Ввод:      {
                          "value": "a b b c c c"
                        }
            Результат: {
                          "characterFrequency": "\"whitespace\": 5, \"c\": 3, \"b\": 2, \"a\": 1"
                       }
        (c) Ввод:      {
                          "value": "a+b-b=c*c/c"
                        }
            Результат: {
                          "characterFrequency": "\"c\": 3, \"b\": 2, \"a\": 1, \"*\": 1, \"+\": 1, \"-\": 1, \"=\": 1, \"/\": 1"
                       }

5. ОШИБКИ
Если
  (a) размер введенного текста будет меньше 1 символа, или
  (б) текст будет содержать символы, не указанные в разделе «3. ПАРАМЕТРЫ» (например, китайские иероглифы),
приложение вернет в качестве ответа:
5.1 при использовании браузера: соответствующее предупреждающее уведомление с описанием причины ошибки;
5.2 при использовании REST API:
    - статус: Bad Request
    - код статуса: 400
    - content-type: application/json
    - JSON: {
                "value": "Сообщение с описанием ошибки"
            }

